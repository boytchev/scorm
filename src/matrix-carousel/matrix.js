//
//	class Matrix( )
//

	
class Matrix
{
	static allMatrixData;
	static allGroups = [];
	
	constructor( )
	{
		if( !Matrix.allMatrixData )
			this.generateAllMatrixData( );

	} // Matrix.constructor

	
	
	// generate a list of all possible matrices
	generateAllMatrixData( )
	{
		//						10% 30% 45% 60% 70% 85% 95% 100%
		// group 0	I			 x   -   -   -   -   -   -   -
		// group 1	Sx Sy Sz	 -   x   x   -   -   -   -   -
		// group 2	Sxy Sxz Sxz	 -   -   x   -   -   -   -   -
		// group 3	Tx Ty Tz	 -   -   -   x   x   -   -   -
		// group 4	Txy Txz Tyz	 -   -   -   -   x   -   -   -
		// group 5	Sxyz		 -   -   -   -   -   x   -   x
		// group 6	Txyz		 -   -   -   -   -   x   -   x
		// group 7	Rx Ry Rz	 -   -   -   -   -   -   x   x
		// group 8	C			 -   -   -   -   -   -   -   x
		// group 9	P			 -   -   -   -   -   -   -   x

		
		var T = 3, 						// translation value
			S = 2.3,					// scale value
			C = 4, 						// orthogonal projection value
			P = 1/2, 					// perspective projection value
			PS = 1/P, 					// perspective scale
			SN = Math.sin(Math.PI/2),	// rot value
			CS = Math.cos(Math.PI/2);	// rot value
	
		Matrix.allMatrixData = [
			// 0
			{id:'I', 	matrix:[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]],		group:0,	step:[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]]},
			// 1
			{id:'S+00', matrix:[[2,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]],		group:1,	step:[[S,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]],	},
			{id:'S0+0', matrix:[[1,0,0,0],[0,2,0,0],[0,0,1,0],[0,0,0,1]],		group:1,	step:[[1,0,0,0],[0,S,0,0],[0,0,1,0],[0,0,0,1]],	},
			{id:'S00+', matrix:[[1,0,0,0],[0,1,0,0],[0,0,2,0],[0,0,0,1]],		group:1,	step:[[1,0,0,0],[0,1,0,0],[0,0,S,0],[0,0,0,1]],	},
			{id:'S-00', matrix:[[1/2,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]],		group:1,	step:[[1/S,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]],},
			{id:'S0-0', matrix:[[1,0,0,0],[0,1/2,0,0],[0,0,1,0],[0,0,0,1]],		group:1,	step:[[1,0,0,0],[0,1/S,0,0],[0,0,1,0],[0,0,0,1]],},
			{id:'S00-', matrix:[[1,0,0,0],[0,1,0,0],[0,0,1/2,0],[0,0,0,1]],		group:1,	step:[[1,0,0,0],[0,1,0,0],[0,0,1/S,0],[0,0,0,1]],},
			// 2
			{id:'S++0', matrix:[[2,0,0,0],[0,2,0,0],[0,0,1,0],[0,0,0,1]],		group:2,	step:[[S,0,0,0],[0,S,0,0],[0,0,1,0],[0,0,0,1]]},
			{id:'S+0+', matrix:[[2,0,0,0],[0,1,0,0],[0,0,2,0],[0,0,0,1]],		group:2,	step:[[S,0,0,0],[0,1,0,0],[0,0,S,0],[0,0,0,1]]},
			{id:'S0++', matrix:[[1,0,0,0],[0,2,0,0],[0,0,2,0],[0,0,0,1]],		group:2,	step:[[1,0,0,0],[0,S,0,0],[0,0,S,0],[0,0,0,1]]},
			{id:'S+-0', matrix:[[2,0,0,0],[0,1/2,0,0],[0,0,1,0],[0,0,0,1]],		group:2,	step:[[S,0,0,0],[0,1/S,0,0],[0,0,1,0],[0,0,0,1]]},
			{id:'S+0-', matrix:[[2,0,0,0],[0,1,0,0],[0,0,1/2,0],[0,0,0,1]],		group:2,	step:[[S,0,0,0],[0,1,0,0],[0,0,1/S,0],[0,0,0,1]]},
			{id:'S0+-', matrix:[[1,0,0,0],[0,2,0,0],[0,0,1/2,0],[0,0,0,1]],		group:2,	step:[[1,0,0,0],[0,S,0,0],[0,0,1/S,0],[0,0,0,1]]},
			{id:'S-+0', matrix:[[1/2,0,0,0],[0,2,0,0],[0,0,1,0],[0,0,0,1]],		group:2,	step:[[1/S,0,0,0],[0,S,0,0],[0,0,1,0],[0,0,0,1]]},
			{id:'S-0+', matrix:[[1/2,0,0,0],[0,1,0,0],[0,0,2,0],[0,0,0,1]],		group:2,	step:[[1/S,0,0,0],[0,1,0,0],[0,0,S,0],[0,0,0,1]]},
			{id:'S0-+', matrix:[[1,0,0,0],[0,1/2,0,0],[0,0,2,0],[0,0,0,1]],		group:2,	step:[[1,0,0,0],[0,1/S,0,0],[0,0,S,0],[0,0,0,1]]},
			{id:'S--0', matrix:[[1/2,0,0,0],[0,1/2,0,0],[0,0,1,0],[0,0,0,1]],	group:2,	step:[[1/S,0,0,0],[0,1/S,0,0],[0,0,1,0],[0,0,0,1]]},
			{id:'S-0-', matrix:[[1/2,0,0,0],[0,1,0,0],[0,0,1/2,0],[0,0,0,1]],	group:2,	step:[[1/S,0,0,0],[0,1,0,0],[0,0,1/S,0],[0,0,0,1]]},
			{id:'S0--', matrix:[[1,0,0,0],[0,1/2,0,0],[0,0,1/2,0],[0,0,0,1]],	group:2,	step:[[1,0,0,0],[0,1/S,0,0],[0,0,1/S,0],[0,0,0,1]]},
			// 3
			{id:'T+00', matrix:[[1,0,0,1],[0,1,0,0],[0,0,1,0],[0,0,0,1]],		group:3,	step:[[1,0,0,T],[0,1,0,0],[0,0,1,0],[0,0,0,1]]},
			{id:'T0+0', matrix:[[1,0,0,0],[0,1,0,1],[0,0,1,0],[0,0,0,1]],		group:3,	step:[[1,0,0,0],[0,1,0,T],[0,0,1,0],[0,0,0,1]]},
			{id:'T00+', matrix:[[1,0,0,0],[0,1,0,0],[0,0,1,1],[0,0,0,1]],		group:3,	step:[[1,0,0,0],[0,1,0,0],[0,0,1,T],[0,0,0,1]]},
			{id:'T-00', matrix:[[1,0,0,-1],[0,1,0,0],[0,0,1,0],[0,0,0,1]],		group:3,	step:[[1,0,0,-T],[0,1,0,0],[0,0,1,0],[0,0,0,1]]},
			{id:'T0-0', matrix:[[1,0,0,0],[0,1,0,-1],[0,0,1,0],[0,0,0,1]],		group:3,	step:[[1,0,0,0],[0,1,0,-T],[0,0,1,0],[0,0,0,1]]},
			{id:'T00-', matrix:[[1,0,0,0],[0,1,0,0],[0,0,1,-1],[0,0,0,1]],		group:3,	step:[[1,0,0,0],[0,1,0,0],[0,0,1,-T],[0,0,0,1]]},
			// 4
			{id:'T++0', matrix:[[1,0,0,1],[0,1,0,1],[0,0,1,0],[0,0,0,1]],		group:4,	step:[[1,0,0,T],[0,1,0,T],[0,0,1,0],[0,0,0,1]]},
			{id:'T+0+', matrix:[[1,0,0,1],[0,1,0,0],[0,0,1,1],[0,0,0,1]],		group:4,	step:[[1,0,0,T],[0,1,0,0],[0,0,1,T],[0,0,0,1]]},
			{id:'T0++', matrix:[[1,0,0,0],[0,1,0,1],[0,0,1,1],[0,0,0,1]],		group:4,	step:[[1,0,0,0],[0,1,0,T],[0,0,1,T],[0,0,0,1]]},
			{id:'T+-0', matrix:[[1,0,0,1],[0,1,0,-1],[0,0,1,0],[0,0,0,1]],		group:4,	step:[[1,0,0,T],[0,1,0,-T],[0,0,1,0],[0,0,0,1]]},
			{id:'T+0-', matrix:[[1,0,0,1],[0,1,0,0],[0,0,1,-1],[0,0,0,1]],		group:4,	step:[[1,0,0,T],[0,1,0,0],[0,0,1,-T],[0,0,0,1]]},
			{id:'T0+-', matrix:[[1,0,0,0],[0,1,0,1],[0,0,1,-1],[0,0,0,1]],		group:4,	step:[[1,0,0,0],[0,1,0,T],[0,0,1,-T],[0,0,0,1]]},		
			{id:'T-+0', matrix:[[1,0,0,-1],[0,1,0,1],[0,0,1,0],[0,0,0,1]],		group:4,	step:[[1,0,0,-T],[0,1,0,T],[0,0,1,0],[0,0,0,1]]},
			{id:'T-0+', matrix:[[1,0,0,-1],[0,1,0,0],[0,0,1,1],[0,0,0,1]],		group:4,	step:[[1,0,0,-T],[0,1,0,0],[0,0,1,T],[0,0,0,1]]},
			{id:'T0-+', matrix:[[1,0,0,0],[0,1,0,-1],[0,0,1,1],[0,0,0,1]],		group:4,	step:[[1,0,0,0],[0,1,0,-T],[0,0,1,T],[0,0,0,1]]},
			{id:'T--0', matrix:[[1,0,0,-1],[0,1,0,-1],[0,0,1,0],[0,0,0,1]],		group:4,	step:[[1,0,0,-T],[0,1,0,-T],[0,0,1,0],[0,0,0,1]]},
			{id:'T-0-', matrix:[[1,0,0,-1],[0,1,0,0],[0,0,1,-1],[0,0,0,1]],		group:4,	step:[[1,0,0,-T],[0,1,0,0],[0,0,1,-T],[0,0,0,1]]},
			{id:'T0--', matrix:[[1,0,0,0],[0,1,0,-1],[0,0,1,-1],[0,0,0,1]],		group:4,	step:[[1,0,0,0],[0,1,0,-T],[0,0,1,-T],[0,0,0,1]]},
			// 5
			{id:'S+++', matrix:[[2,0,0,0],[0,2,0,0],[0,0,2,0],[0,0,0,1]],		group:5,	step:[[S,0,0,0],[0,S,0,0],[0,0,S,0],[0,0,0,1]]},
			{id:'S++-', matrix:[[2,0,0,0],[0,2,0,0],[0,0,1/2,0],[0,0,0,1]],		group:5,	step:[[S,0,0,0],[0,S,0,0],[0,0,1/S,0],[0,0,0,1]]},
			{id:'S+-+', matrix:[[2,0,0,0],[0,1/2,0,0],[0,0,2,0],[0,0,0,1]],		group:5,	step:[[S,0,0,0],[0,1/S,0,0],[0,0,S,0],[0,0,0,1]]},
			{id:'S+--', matrix:[[2,0,0,0],[0,1/2,0,0],[0,0,1/2,0],[0,0,0,1]],	group:5,	step:[[S,0,0,0],[0,1/S,0,0],[0,0,1/S,0],[0,0,0,1]]},
			{id:'S-++', matrix:[[1/2,0,0,0],[0,2,0,0],[0,0,2,0],[0,0,0,1]],		group:5,	step:[[1/S,0,0,0],[0,S,0,0],[0,0,S,0],[0,0,0,1]]},
			{id:'S-+-', matrix:[[1/2,0,0,0],[0,2,0,0],[0,0,1/2,0],[0,0,0,1]],	group:5,	step:[[1/S,0,0,0],[0,S,0,0],[0,0,1/S,0],[0,0,0,1]]},
			{id:'S--+', matrix:[[1/2,0,0,0],[0,1/2,0,0],[0,0,2,0],[0,0,0,1]],	group:5,	step:[[1/S,0,0,0],[0,1/S,0,0],[0,0,S,0],[0,0,0,1]]},
			{id:'S---', matrix:[[1/2,0,0,0],[0,1/2,0,0],[0,0,1/2,0],[0,0,0,1]],	group:5,	step:[[1/S,0,0,0],[0,1/S,0,0],[0,0,1/S,0],[0,0,0,1]]},
			//6
			{id:'T+++', matrix:[[1,0,0,1],[0,1,0,1],[0,0,1,1],[0,0,0,1]],		group:6,	step:[[1,0,0,T],[0,1,0,T],[0,0,1,T],[0,0,0,1]]},
			{id:'T++-', matrix:[[1,0,0,1],[0,1,0,1],[0,0,1,-1],[0,0,0,1]],		group:6,	step:[[1,0,0,T],[0,1,0,T],[0,0,1,-T],[0,0,0,1]]},
			{id:'T+-+', matrix:[[1,0,0,1],[0,1,0,-1],[0,0,1,1],[0,0,0,1]],		group:6,	step:[[1,0,0,T],[0,1,0,-T],[0,0,1,T],[0,0,0,1]]},
			{id:'T+--', matrix:[[1,0,0,1],[0,1,0,-1],[0,0,1,-1],[0,0,0,1]],		group:6,	step:[[1,0,0,T],[0,1,0,-T],[0,0,1,-T],[0,0,0,1]]},
			{id:'T-++', matrix:[[1,0,0,-1],[0,1,0,1],[0,0,1,1],[0,0,0,1]],		group:6,	step:[[1,0,0,-T],[0,1,0,T],[0,0,1,T],[0,0,0,1]]},
			{id:'T-+-', matrix:[[1,0,0,-1],[0,1,0,1],[0,0,1,-1],[0,0,0,1]],		group:6,	step:[[1,0,0,-T],[0,1,0,T],[0,0,1,-T],[0,0,0,1]]},
			{id:'T--+', matrix:[[1,0,0,-1],[0,1,0,-1],[0,0,1,1],[0,0,0,1]],		group:6,	step:[[1,0,0,-T],[0,1,0,-T],[0,0,1,T],[0,0,0,1]]},
			{id:'T---', matrix:[[1,0,0,-1],[0,1,0,-1],[0,0,1,-1],[0,0,0,1]],	group:6,	step:[[1,0,0,-T],[0,1,0,-T],[0,0,1,-T],[0,0,0,1]]},
			// 7
			{id:'Rxy', matrix:[[0,-1,0,0],[1,0,0,0],[0,0,1,0],[0,0,0,1]],		group:7,	step:[[CS,-SN,0,0],[SN,CS,0,0],[0,0,1,0],[0,0,0,1]]},
			{id:'Ryx', matrix:[[0,1,0,0],[-1,0,0,0],[0,0,1,0],[0,0,0,1]],		group:7,	step:[[CS,SN,0,0],[-SN,CS,0,0],[0,0,1,0],[0,0,0,1]]},
			{id:'Rxz', matrix:[[0,0,-1,0],[0,1,0,0],[1,0,0,0],[0,0,0,1]],		group:7,	step:[[CS,0,-SN,0],[0,1,0,0],[SN,0,CS,0],[0,0,0,1]]},
			{id:'Rzx', matrix:[[0,0,1,0],[0,1,0,0],[-1,0,0,0],[0,0,0,1]],		group:7,	step:[[CS,0,SN,0],[0,1,0,0],[-SN,0,CS,0],[0,0,0,1]]},
			{id:'Ryz', matrix:[[1,0,0,0],[0,0,-1,0],[0,1,0,0],[0,0,0,1]],		group:7,	step:[[1,0,0,0],[0,CS,-SN,0],[0,SN,CS,0],[0,0,0,1]]},
			{id:'Rzy', matrix:[[1,0,0,0],[0,0,1,0],[0,-1,0,0],[0,0,0,1]],		group:7,	step:[[1,0,0,0],[0,CS,SN,0],[0,-SN,CS,0],[0,0,0,1]]},
			// 8
			{id:'Cx+', matrix:[[0,0,0,1],[0,1,0,0],[0,0,1,0],[0,0,0,1]],		group:8,	step:[[0,0,0,C],[0,1,0,0],[0,0,1,0],[0,0,0,1]]},
			{id:'Cy+', matrix:[[1,0,0,0],[0,0,0,1],[0,0,1,0],[0,0,0,1]],		group:8,	step:[[1,0,0,0],[0,0,0,C],[0,0,1,0],[0,0,0,1]]},
			{id:'Cz+', matrix:[[1,0,0,0],[0,1,0,0],[0,0,0,1],[0,0,0,1]],		group:8,	step:[[1,0,0,0],[0,1,0,0],[0,0,0,C],[0,0,0,1]]},
			{id:'Cx-', matrix:[[0,0,0,-1],[0,1,0,0],[0,0,1,0],[0,0,0,1]],		group:8,	step:[[0,0,0,-C],[0,1,0,0],[0,0,1,0],[0,0,0,1]]},
			{id:'Cy-', matrix:[[1,0,0,0],[0,0,0,-1],[0,0,1,0],[0,0,0,1]],		group:8,	step:[[1,0,0,0],[0,0,0,-C],[0,0,1,0],[0,0,0,1]]},
			{id:'Cz-', matrix:[[1,0,0,0],[0,1,0,0],[0,0,0,-1],[0,0,0,1]],		group:8,	step:[[1,0,0,0],[0,1,0,0],[0,0,0,-C],[0,0,0,1]]},
			// 9
			{id:'Pz+', matrix:[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,1,0]],		group:9,	step:[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,P,PS]]},
			{id:'Py+', matrix:[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,1,0,0]],		group:9,	step:[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,P,0,PS]]},
			{id:'Px+', matrix:[[1,0,0,0],[0,1,0,0],[0,0,1,0],[1,0,0,0]],		group:9,	step:[[1,0,0,0],[0,1,0,0],[0,0,1,0],[P,0,0,PS]]},
			{id:'Pz-', matrix:[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,-1,0]],		group:9,	step:[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,-P,PS]]},
			{id:'Py-', matrix:[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,-1,0,0]],		group:9,	step:[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,-P,0,PS]]},
			{id:'Px-', matrix:[[1,0,0,0],[0,1,0,0],[0,0,1,0],[-1,0,0,0]],		group:9,	step:[[1,0,0,0],[0,1,0,0],[0,0,1,0],[-P,0,0,PS]]},
		];
		
		var group = -1;
		for( var i=0; i<Matrix.allMatrixData.length; i++ )
		{
			var data = Matrix.allMatrixData[i];
			//if (!data.offset) data.offset = [0, 0, 0]; 	<-- is it needed?
			
			if( group != data.group )
			{
				group = data.group;
				Matrix.allGroups[group] = {min:i};
			}
			
			Matrix.allGroups[group].max = i;
		}
		//console.log( Matrix.allGroups );

	} // Matrix.generateMatrixData
	

	static group( idx )
	{
		return Matrix.allMatrixData[idx].group;
	}
	
	
	static type( idx )
	{
		return Matrix.allMatrixData[idx].id[0];
	}
	
	
	static setMatrix( object, idx, k )
	{
		// extract matrix with index idx lerped from indentity by k
		//		if k=0 return identity
		//		if 0<k<1 return lert(identity,matrix)
		//		if k=1 return the matrix
		
		if( idx < 0 ) return;
			
		var matrix = [[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]], // identity
			target = Matrix.allMatrixData[idx].step; 	// target matrix

		var matrixType = Matrix.allMatrixData[idx].id[0];
		
		// for projection matrixes do not go to k=1!!!
		if( matrixType == 'C' ) k = Math.min( k, 0.99 );
		if( matrixType == 'P' ) k = Math.min( k, 0.99 );
		
		// rotations need rescaling
		var rescale = matrixType=='R';

		for( var x=0; x<4; x++ )
		{
			var len = 0;
			for( var y=0; y<4; y++ )
			{
				matrix[x][y] = THREE.MathUtils.lerp( matrix[x][y], target[x][y], k );
				if (rescale) len += matrix[x][y]*matrix[x][y];
			}
			if (rescale) 
			{
				len = Math.sqrt(len);
				for( var y=0; y<4; y++ )
					matrix[x][y] /= len;
			}
		}
		
		object.threejs.matrixAutoUpdate = false;
		object.threejs.matrix.set(
				...matrix[0],
				...matrix[1],
				...matrix[2],
				...matrix[3]
			);
	}
	
	
} // class Matrix

